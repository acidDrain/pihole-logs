{
  "author": "James Grow",
  "description": "Tool written in JS to pull logs from PiHole and put into ElasticSearch",
  "keywords": [
    "pihole",
    "raspberrypi",
    "elasticsearch"
  ],
  "main": "fetch_pihole_logs.js",
  "name": "pihole_logs",
  "license": "Apache",
  "scripts": {
    "build": "rm -rf build/* && npm ci && npm run build:types && npm run build:js",
    "build:production": "rm -rf build/* && npm ci && npm run build:types && npm run build:js && npm run env NODE_ENV=production",
    "build:js": "babel --verbose --no-comments --delete-dir-on-start ./src --ignore src/**/__tests__ -d ./build --extensions \".ts\"",
    "build:types": "tsc",
    "coverage": "jest --coverage",
    "coverage:ci": "jest --coverage --ci --json",
    "test": "jest --verbose --notify",
    "test:watch": "jest -o --watch --verbose",
    "tslint-check": "tslint-config-prettier-check ./tslint.json",
    "type-check": "tsc",
    "type-check:watch": "npm run type-check -- --watch"
  },
  "repository": "https://github.com/acidDrain/pihole-logs.git",
  "version": "0.1.0",
  "dependencies": {
    "dotenv": "^8.1.0",
    "node-fetch": "^2.6.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.4.3",
    "@babel/node": "^7.2.2",
    "@babel/polyfill": "^7.2.5",
    "@babel/preset-env": "^7.3.4",
    "@babel/preset-typescript": "^7.1.0",
    "@babel/register": "^7.0.0",
    "@types/dotenv": "^8.2.0",
    "@types/es6-promise": "^3.3.0",
    "@types/node": "^10.14.5",
    "@types/node-fetch": "^2.5.3",
    "babel-jest": "^24.1.0",
    "babel-loader": "^8.0.5",
    "babel-plugin-module-resolver": "^3.2.0",
    "eslint": "^5.3.0",
    "jest": "^24.3.1",
    "ts-loader": "^5.3.3",
    "ts-node": "^8.0.2",
    "tslint": "^5.12.1",
    "tslint-config-prettier": "^1.17.0",
    "typescript": "^3.2.4"
  },
  "jest": {
    "moduleDirectories": [
      "./node_modules",
      "./src"
    ],
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "transform": {
      "^.+\\.(js|ts)$": "babel-jest"
    },
    "coverageThreshold": {
      "global": {
        "branches": 75,
        "functions": 75,
        "lines": 75,
        "statements": 75
      }
    },
    "testEnvironment": "node"
  }
}
